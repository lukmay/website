<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>all posts on Lukas Mayr</title>
    <link>https://lukasmayr.tech/tags/all-posts/</link>
    <description>Recent content in all posts on Lukas Mayr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jun 2024 09:30:00 +0200</lastBuildDate><atom:link href="https://lukasmayr.tech/tags/all-posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Type-Safe Programming in Python</title>
      <link>https://lukasmayr.tech/posts/type-safe_python/</link>
      <pubDate>Sat, 01 Jun 2024 09:30:00 +0200</pubDate>
      
      <guid>https://lukasmayr.tech/posts/type-safe_python/</guid>
      <description>&lt;p&gt;Python is celebrated for its simplicity and flexibility, but these features come with a trade-off: a lack of built-in type safety.
This can lead to bugs that are hard to track down, especially in large codebases. Fortunately, Python 3.5 introduced type hints, which can be enforced using tools like Mypy to bring type safety to your code. In this post, we&amp;rsquo;ll explore how to leverage type annotations and Mypy to write more reliable Python code.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
